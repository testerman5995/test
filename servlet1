index.html(insert in webapps)
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information Portal</title>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #667eea, #764ba2);
            text-align: center;
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .container {
            background: rgba(255, 255, 255, 0.2);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            width: 350px;
            color: white;
        }
        h2 {
            margin-bottom: 20px;
            font-weight: bold;
        }
        input[type="text"] {
            padding: 12px;
            margin: 10px 0;
            width: 100%;
            border: none;
            border-radius: 5px;
            text-align: center;
        }
        input[type="submit"] {
            background-color: #ff7eb3;
            color: white;
            border: none;
            padding: 12px;
            cursor: pointer;
            border-radius: 5px;
            width: 100%;
            font-size: 16px;
            transition: 0.3s;
        }
        input[type="submit"]:hover {
            background-color: #ff4f88;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Student Information</h2>
        <form action="StudentServlet" method="post">
            <input type="text" id="rollNumber" name="rollNumber" placeholder="Enter Roll Number" required><br>
            <input type="submit" value="Get Details">
        </form>
    </div>
</body>
</html>


studentservlet(insert in src/main/<create package>)

package rn241047039;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

@WebServlet("/StudentServlet")
public class studentservlet extends HttpServlet {
    private static final long serialVersionUID = 1L;
    
    // Logger instance for logging
    private static final Logger logger = LogManager.getLogger(studentservlet.class);

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        doPost(request, response);
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();

        String rollNumberStr = request.getParameter("rollNumber");
        logger.info("Received input for roll number: {}", rollNumberStr);

        if (rollNumberStr == null || rollNumberStr.trim().isEmpty()) {
            logger.warn("Roll Number is missing in the request");
            out.println("<h2>Error: Roll Number is required</h2>");
            return;
        }

        int rollNumber;
        try {
            rollNumber = Integer.parseInt(rollNumberStr);
        } catch (NumberFormatException e) {
            logger.error("Invalid Roll Number format received: {}", rollNumberStr, e);
            out.println("<h2>Error: Invalid Roll Number format</h2>");
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            // Load MSSQL JDBC Driver
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // Database Connection (Ensure correct credentials)
            String dbURL = "jdbc:sqlserver://172.16.51.64:1433;databaseName=241047039;encrypt=false;";
            String user = "tarun"; 
            String password = "Tar@39";
            
            logger.info("Attempting to connect to the database...");
            conn = DriverManager.getConnection(dbURL, user, password);
            logger.info("Database connection established successfully.");

            // Query
            String sql = "SELECT * FROM Students WHERE roll_number = ?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, rollNumber);

            logger.info("Executing query to fetch student details for Roll Number: {}", rollNumber);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                out.println("<h2>Student Details:</h2>");
                out.println("<p>Roll Number: "   rs.getInt("roll_number")   "</p>");
                out.println("<p>Name: "   rs.getString("name")   "</p>");
                out.println("<p>Age: "   rs.getInt("age")   "</p>");
                out.println("<p>Department: "   rs.getString("department")   "</p>");
                logger.info("Student details found for Roll Number: {}", rollNumber);
            } else {
                out.println("<h2>No Student Found with Roll Number: "   rollNumber   "</h2>");
                logger.warn("No student found for Roll Number: {}", rollNumber);
            }

        } catch (ClassNotFoundException e) {
            logger.error("SQL Server JDBC Driver not found.", e);
            out.println("<h2>Error: SQL Server JDBC Driver not found.</h2>");
        } catch (Exception e) {
            logger.error("Error fetching student details", e);
            out.println("<h2>Error fetching student details</h2>");
        } finally {
            try { if (rs != null) rs.close(); } catch (Exception e) { logger.error("Failed to close ResultSet", e); }
            try { if (pstmt != null) pstmt.close(); } catch (Exception e) { logger.error("Failed to close PreparedStatement", e); }
            try { if (conn != null) { conn.close(); logger.info("Database connection closed."); } } catch (Exception e) { logger.error("Failed to close Connection", e); }
        }
    }
}




